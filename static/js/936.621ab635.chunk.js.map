{"version":3,"file":"static/js/936.621ab635.chunk.js","mappings":"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","sources":["components/ContactAdded/ContactAdded.styled.jsx","components/Validation/Validation.styled.jsx","redux/contacts/selectors.js","components/ContactAdded/ContactAdded.jsx","components/ContactsList/ContactsList.styled.jsx","components/Contact/Contact.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/FilterForm/FilterForm.module.css?6686","components/FilterForm/FilterForm.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const LabelForm = styled.label`\n\n    color: #353535;\n\tfont-size: 1.5em;\n\tjustify-content: center;\n\tdisplay: flex;\n    align-items: center;\n    flex-direction: column;\n\tfont-weight: 500;\n\ttransition: .5s ease-in-out;\n    \n`;\n\nexport const FormInput = styled(Field)`\n    width: 70%;\n\theight: 20px;\n\tbackground: #e0dede;\n\tjustify-content: center;\n\tdisplay: flex;\n    margin-top: 20px;\n    margin-left: auto;\n    margin-right: auto;\n\tpadding: 10px;\n\tborder: none;\n\toutline: none;\n\tborder-radius: 5px;\n`;\n\nexport const SectionForm = styled.section`\n    padding-top: 15px;\n    padding-bottom: 15px;\n`;\n\nexport const ContainerForm = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n    \n`;\n\nexport const FormBlock = styled(Form)`\n    max-width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    border: 2px solid #4e4d4d;\n    border-radius: 5px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\n\n\n\n","import { styled } from \"styled-components\";\n\nexport const Validation = styled.div`\n    font-size: 14px;\n    font-weight: 400;\n    padding: 10px;\n    color: #ff0000;\n    margin: 0;\n`;","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectAllContacts = state => state.contacts.items;","import { Formik } from \"formik\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectAllContacts } from \"redux/contacts/selectors\";\nimport * as Yup from 'yup';\nimport { LabelForm, FormInput, SectionForm, ContainerForm, FormBlock } from \"./ContactAdded.styled\";\nimport { ButtonContact } from \"components/Button/Button.styled\";\nimport { Validation } from \"components/Validation/Validation.styled\";\n\nexport const ContactAdded = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectAllContacts);\n\n    const phoneValidation = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n    const handleSubmit = (values, { resetForm }) => {\n        if (values.name === \"\" || values.phone === \"\") {\n            return toast.error('Please enter Name and phone number')\n        };\n        const check = contacts.find(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n        if (check) {\n            resetForm();\n            return toast.error('This contact has already been added to your phonebook');\n        }\n        dispatch(addContact(values));\n        resetForm();\n    }\n\n    return (\n        <SectionForm>\n            <ContainerForm>\n            <Formik\n                initialValues={{\n                    name: '',\n                    number: '',\n                }}\n                validationSchema={Yup.object({\n                    name: Yup.string()\n                        .max(15, 'Must be 15 characters or less')\n                        .required('Required'),\n                    number: Yup.string().matches(phoneValidation, 'Phone number is not valid'),\n                })}\n                onSubmit={handleSubmit}\n            >\n                {({ isSubmitting, errors, touched }) => (\n                    <FormBlock>\n                        <LabelForm htmlFor=\"name\">Name\n                            <FormInput type=\"text\" name=\"name\" />\n                            {errors.name && touched.name ? (<Validation>{errors.name}</Validation>) : null}\n                        </LabelForm>\n                    \n                        <LabelForm htmlFor=\"number\">Number\n                            <FormInput type=\"phone\" name=\"number\" />\n                            {errors.number && touched.number ? (<Validation>{errors.number}</Validation>) : null}\n                        </LabelForm>\n                    \n                        <ButtonContact type=\"submit\" disabled={isSubmitting}>\n                            Add Contact\n                        </ButtonContact>\n                    </FormBlock>\n                )}\n            </Formik>\n            <Toaster\n                position=\"top-right\"\n                reverseOrder={false}\n                />\n                </ContainerForm>\n        </SectionForm>\n    )\n}","import { styled } from \"styled-components\";\n\nexport const SectionList = styled.section`\n    padding-top: 15px;\n    padding-bottom: 15px;\n`;\n\nexport const ContainerList = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;  \n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    max-width: 50%;\n`;\n\nexport const ItemContact = styled.li`\n    padding: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ContactBlock = styled.div`\n    display: flex;\n    gap: 20px;\n`;\n\nexport const NameContact = styled.h3`\n    margin: 0;\n`;\n\nexport const NumberContact = styled.p`\n    margin: 0;\n`;","import { ButtonDelete } from \"components/Button/Button.styled\";\nimport { ContactBlock, NameContact, NumberContact } from \"components/ContactsList/ContactsList.styled\";\nimport { useDispatch } from \"react-redux\"\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\n\nexport const Contact = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    \n    const handleDelete = (event) => {\n        dispatch(deleteContact(event.currentTarget.value));\n    }\n\n    return (\n            <>\n                <ContactBlock>\n\t                <NameContact>{name}</NameContact>\n\t                <NumberContact>{number}</NumberContact>\n                </ContactBlock>\n                <ButtonDelete type=\"button\" value={id} onClick={handleDelete}><AiOutlineDelete/></ButtonDelete>\n            </>\n    )\n}","export const getFiltersContacts = state => state.filter.queryFilter;\n\nexport const getFiltersStatus = state => state.filter.showFilter;","// extracted by mini-css-extract-plugin\nexport default {\"label-contacts\":\"FilterForm_label-contacts__0y5Un\",\"input-contacts\":\"FilterForm_input-contacts__32mwK\",\"block-filter\":\"FilterForm_block-filter__o31Pp\",\"title-filter\":\"FilterForm_title-filter__qA-78\"};","import { ButtonContact } from \"components/Button/Button.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFiltersContacts, getFiltersStatus } from \"redux/filter/selectors\";\nimport { setQueryFilter, toggleStatusFilter } from \"redux/filter/slice\";\nimport css from \"./FilterForm.module.css\"\n\nexport const FilterForm = () => {\n    const dispatch = useDispatch();\n\n    const filter = useSelector(getFiltersContacts);\n    const handleChange = (event) => {\n        dispatch(setQueryFilter(event.currentTarget.value));\n    }\n\n    const filterStatus = useSelector(getFiltersStatus);\n    const handleToggleFilter = () => {\n        dispatch(toggleStatusFilter(!filterStatus));\n    }\n\n    return (\n        <div className={css[\"block-filter\"]}>\n            <ButtonContact type=\"button\" onClick={handleToggleFilter}>{filterStatus ? (\"Hide Filter\") : (\"Show Filter\")}</ButtonContact>\n            {filterStatus && (<>\n            <p className={css[\"title-filter\"]}>Find contacts by name</p>\n            <label className={css[\"label-contacts\"]}>\n                <input\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={handleChange}\n                className={css[\"input-contacts\"]}\n                />\n            </label></>)}\n        </div>\n    )\n}","import { Contact } from \"components/Contact/Contact\";\nimport { useSelector } from \"react-redux\"\nimport { selectAllContacts } from \"redux/contacts/selectors\"\nimport { List, SectionList, ContainerList, ItemContact } from \"./ContactsList.styled\";\nimport { FilterForm } from \"components/FilterForm/FilterForm\";\nimport { getFiltersContacts } from \"redux/filter/selectors\";\n\nconst getFilteredContacts = (contacts, queryFilter) => {\n    if (!queryFilter) {\n        return contacts\n    }\n    return contacts.filter(({ name }) => name.toLowerCase().includes(queryFilter.toLowerCase()));\n};\n\nexport const ContactsList = () => {\n\n    const contacts = useSelector(selectAllContacts);\n    const filter = useSelector(getFiltersContacts);\n    const filteredContacts = getFilteredContacts(contacts, filter);\n\n    return (\n        <SectionList>\n            <ContainerList>\n                {contacts && <h2>Your list contacts</h2>}\n                {contacts && <FilterForm/>}\n                <List>\n                    {filteredContacts.map(({ name, number, id }) => (\n                        <ItemContact key={id}>\n                            <Contact name={name} number={number} id={id} />\n                        </ItemContact>\n                    ))}\n                </List>\n            </ContainerList>\n        </SectionList>\n    )\n};","import { ContactAdded } from \"components/ContactAdded/ContactAdded\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { useEffect } from \"react\";\nimport { ColorRing } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from \"redux/contacts/selectors\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <ContactAdded />\n            <div style={{\n                padding: \"20px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n            }}>\n                <ColorRing\n                    visible={isLoading}\n                    height=\"80\"\n                    width=\"80\"\n                    ariaLabel=\"blocks-loading\"\n                    colors={['#301ddc', '#1870f3', '#26f6b4', '#f6cf0f', '#f52f1d']}\n                />\n            </div>\n            \n            <ContactsList/>\n        </>\n    )\n}"],"names":["LabelForm","styled","_templateObject","_taggedTemplateLiteral","FormInput","Field","_templateObject2","SectionForm","_templateObject3","ContainerForm","_templateObject4","FormBlock","Form","_templateObject5","Validation","selectLoading","state","contacts","isLoading","selectAllContacts","items","ContactAdded","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","Formik","initialValues","name","number","validationSchema","Yup","max","required","matches","onSubmit","values","_ref","resetForm","phone","toast","find","contact","toLowerCase","addContact","_ref2","isSubmitting","errors","touched","htmlFor","type","ButtonContact","disabled","Toaster","position","reverseOrder","SectionList","ContainerList","List","ItemContact","ContactBlock","NameContact","_templateObject6","NumberContact","_templateObject7","Contact","id","_Fragment","ButtonDelete","value","onClick","event","deleteContact","currentTarget","AiOutlineDelete","getFiltersContacts","filter","queryFilter","getFiltersStatus","showFilter","FilterForm","filterStatus","className","css","toggleStatusFilter","onChange","setQueryFilter","ContactsList","filteredContacts","includes","getFilteredContacts","map","Contacts","useEffect","fetchContacts","style","padding","display","justifyContent","ColorRing","visible","height","width","ariaLabel","colors"],"sourceRoot":""}